import streamlit as st
from io import BytesIO
from pypdf import PdfReader
import pandas as pd

# Streamlit file uploader for PDF
st.title("PDF Keyword Extraction App")
uploaded_file = st.file_uploader("Upload a PDF document", type=["pdf"])

if uploaded_file is not None:
    # 1. Read PDF and extract text
    pdf_reader = PdfReader(uploaded_file)  # UploadedFile is file-like [oai_citation_attribution:15â€¡docs.streamlit.io](https://docs.streamlit.io/develop/api-reference/widgets/st.file_uploader#:~:text=The%20UploadedFile%20class%20is%20a,anywhere%20a%20file%20is%20expected)
    full_text = ""
    for page in pdf_reader.pages:
        text = page.extract_text()
        if text:  # ensure page has text
            full_text += text + "\n"
    
    # 2. Identify paragraphs (group lines) and filter by keywords
    paragraphs = []
    curr_para_lines = []
    blank_count = 0
    for line in full_text.splitlines():
        if line.strip() == "":
            blank_count += 1
            if curr_para_lines:
                # end of a paragraph
                paragraphs.append("\n".join(curr_para_lines))
                curr_para_lines = []
            if blank_count >= 3:
                # three consecutive blank lines -> stop further processing
                break
        else:
            blank_count = 0
            curr_para_lines.append(line)
    if curr_para_lines:
        paragraphs.append("\n".join(curr_para_lines))
    
    keywords = ["item no", "quantity", "unit price", "amount"]
    extracted_paras = [para for para in paragraphs 
                       if any(k in para.lower() for k in keywords)]
    
    # 3. Save extracted paragraphs to an Excel file (in memory)
    df = pd.DataFrame({"Extracted Text": extracted_paras})
    output = BytesIO()
    with pd.ExcelWriter(output, engine="xlsxwriter") as writer:
        df.to_excel(writer, index=False)
        # Set wrap text format for the "Extracted Text" column
        workbook  = writer.book
        worksheet = writer.sheets['Sheet1']
        wrap_format = workbook.add_format({'text_wrap': True})
        worksheet.set_column(0, 0, 60, wrap_format)  # 60 width for readability
    excel_data = output.getvalue()
    
    # 4. Provide download button for the Excel file
    st.download_button(
        label="Download Extracted Data as Excel",
        data=excel_data,
        file_name="extracted_paragraphs.xlsx",
        mime="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
    )
    
    st.success(f"Found {len(extracted_paras)} paragraphs containing the keywords.")
